package ch.bfh.btx8081.w2014.red.health;

import java.io.File;

import models.Client;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.annotations.Theme;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.server.FileResource;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.DateField;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.Label;
import com.vaadin.ui.TextField;

import controller.ClientController;

@Theme("mytheme")
@SuppressWarnings("serial")
public class ClientView extends CustomComponent implements View {

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private TextField textField_details;
	@AutoGenerated
	private Label label_title, label_lastname, label_firstname,
			label_birthdate, label_address, label_status, label_mobile,
			label_email, label_emergency, label_doctor;
	@AutoGenerated
	private Button button_details;
	@AutoGenerated
	private Embedded embedded_picture;
	private boolean isHidden = true;
	private TextField field_lastname, field_firstname, field_address,
			field_mobile, field_email, field_emergency, field_doctor;
	private DateField field_birthdate;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public ClientView() {
		setSizeFull();

		buildMainLayout();
		setCompositionRoot(mainLayout);
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {

		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");

		// top-level component properties
		// setWidth("100.0%");
		// setHeight("100.0%");

		// add a hardcoded picutre to Embedded elemet
		FileResource res = new FileResource(new File(
				"C:\\Users\\florian\\Desktop\\feeeeeediii.jpg"));

		// embedded_picture
		embedded_picture = new Embedded();
		embedded_picture.setImmediate(false);
		embedded_picture.setWidth("160px");
		embedded_picture.setHeight("200px");
		embedded_picture.setSource(res);
		embedded_picture.setType(1);
		embedded_picture.setMimeType("image/png");

		mainLayout.addComponent(embedded_picture,
				"top:100.0px;right:415.0px;left:61.0px;");

		// button_details
		button_details = new Button();
		button_details.setCaption("Details");
		button_details.setImmediate(true);
		button_details.setWidth("100.0%");
		button_details.setHeight("-1px");
		mainLayout.addComponent(button_details,
				"top:280.0px;right:290.0px;left:340.0px;");

		// label_status
		label_status = new Label();
		label_status.setImmediate(false);
		label_status.setWidth("-1px");
		label_status.setHeight("-1px");
		label_status.setValue("Status :");
		mainLayout.addComponent(label_status, "top:222.0px;left:340.0px;");

		// label_firstname
		label_firstname = new Label();
		label_firstname.setImmediate(false);
		label_firstname.setWidth("-1px");
		label_firstname.setHeight("-1px");
		label_firstname.setValue("Firstname:");
		mainLayout.addComponent(label_firstname, "top:102.0px;left:340.0px;");

		// label_firstnameTextField
		field_firstname = new TextField();
		field_firstname.setImmediate(false);
		mainLayout.addComponent(field_firstname, "top:100.0px; left:450.0px");

		// label_lastname
		label_lastname = new Label();
		label_lastname.setImmediate(false);
		label_lastname.setWidth("-1px");
		label_lastname.setHeight("-1px");
		label_lastname.setValue("Lastname:");
		mainLayout.addComponent(label_lastname, "top:142.0px;left:340.0px;");

		// label_lastnameTextField
		field_lastname = new TextField();
		field_lastname.setImmediate(false);
		mainLayout.addComponent(field_lastname, "top:140.0px; left:450.0px");

		// label_Birthdate
		label_birthdate = new Label();
		label_birthdate.setImmediate(false);
		label_birthdate.setWidth("-1px");
		label_birthdate.setHeight("-1px");
		label_birthdate.setValue("Birthdate:");
		mainLayout.addComponent(label_birthdate, "top:182.0px;left:340.0px;");

		// label_BirthdateTextField
		field_birthdate = new DateField();
		field_birthdate.setImmediate(false);
		mainLayout.addComponent(field_birthdate, "top:180.0px; left:450.0px");

		// /////////////////////////////////////////////

		// background panel details
		// textField_details = new TextField();
		// textField_details.setCaption("Details");
		// textField_details.setImmediate(false);
		// textField_details.setWidth("600px");
		// textField_details.setHeight("160px");
		// mainLayout.addComponent(textField_details,
		// "top:360.0px;left:60.0px;");
		// textField_details.setVisible(false);

		// label_address
		label_address = new Label();
		label_address.setImmediate(false);
		label_address.setWidth("-1px");
		label_address.setHeight("-1px");
		label_address.setValue("Address:");
		label_address.setVisible(false);
		mainLayout.addComponent(label_address, "top:362.0px;left:60.0px;");

		// addressTextField
		field_address = new TextField();
		field_address.setImmediate(false);
		field_address.setVisible(false);
		mainLayout.addComponent(field_address, "top:360.0px; left:210.0px");

		// label_mobile number
		label_mobile = new Label();
		label_mobile.setImmediate(false);
		label_mobile.setWidth("-1px");
		label_mobile.setHeight("-1px");
		label_mobile.setValue("phone Nr.:");
		label_mobile.setVisible(false);
		mainLayout.addComponent(label_mobile, "top:402.0px;left:60.0px;");

		// mobileTextField
		field_mobile = new TextField();
		field_mobile.setImmediate(false);
		field_mobile.setVisible(false);
		mainLayout.addComponent(field_mobile, "top:400.0px; left:210.0px");

		// label_email
		label_email = new Label();
		label_email.setImmediate(false);
		label_email.setWidth("-1px");
		label_email.setHeight("-1px");
		label_email.setValue("email:");
		label_email.setVisible(false);
		mainLayout.addComponent(label_email, "top:442.0px;left:60.0px;");

		// emailTextField
		field_email = new TextField();
		field_email.setImmediate(false);
		field_email.setVisible(false);
		mainLayout.addComponent(field_email, "top:440.0px; left:210.0px");

		// label_emergency contact
		label_emergency = new Label();
		label_emergency.setImmediate(false);
		label_emergency.setWidth("-1px");
		label_emergency.setHeight("-1px");
		label_emergency.setValue("emergency contact:");
		label_emergency.setVisible(false);
		mainLayout.addComponent(label_emergency, "top:482.0px;left:60.0px;");

		// emergency contact TextField
		field_emergency = new TextField();
		field_emergency.setImmediate(false);
		field_emergency.setVisible(false);
		mainLayout.addComponent(field_emergency, "top:480.0px; left:210.0px");

		// label_doctor
		label_doctor = new Label();
		label_doctor.setImmediate(false);
		label_doctor.setWidth("-1px");
		label_doctor.setHeight("-1px");
		label_doctor.setValue("doctor:");
		label_doctor.setVisible(false);
		mainLayout.addComponent(label_doctor, "top:522.0px;left:60.0px;");

		// doctor TextField
		field_doctor = new TextField();
		field_doctor.setImmediate(false);
		field_doctor.setVisible(false);
		mainLayout.addComponent(field_doctor, "top:520.0px; left:210.0px");

		// /////////////////////////////////////////////

		// label_title
		label_title = new Label();
		label_title.setImmediate(false);
		label_title.setWidth("-1px");
		label_title.setHeight("-1px");
		label_title.setValue("Client View");
		mainLayout.addComponent(label_title, "top:40.0px;left:61.0px;");

		// the action when the "Detail" button has been clicked. Shows and hides
		// the detail view
		button_details.addClickListener(new Button.ClickListener() {

			// this method adds or hides the client details to the ClientUI
			// after clicking the button "details"
			@Override
			public void buttonClick(ClickEvent event) {
				// TODO Auto-generated method stub
				hideOrShowDetails();

			}
		});

		return mainLayout;
	}

	@Override
	public void enter(ViewChangeEvent event) {
		if (event.getParameters() == null || event.getParameters().isEmpty()) {
			setCaption("Kein Klient übermittelt");
			return;
		}

		int clientNr = Integer.parseInt(event.getParameters());
		Client client = ClientController.getClientForID(clientNr);
		if (client == null) {
			setCaption("Kein gültiger Klient");
			return;
		}

		loadClientData(client);
	}

	// Hide or show the attributes of the detail part of the ClientUI
	private void hideOrShowDetails() {
		if (isHidden == true) {
			isHidden = false;

			field_address.setVisible(true);
			field_mobile.setVisible(true);
			field_email.setVisible(true);
			field_emergency.setVisible(true);
			field_doctor.setVisible(true);
			label_address.setVisible(true);
			label_mobile.setVisible(true);
			label_email.setVisible(true);
			label_emergency.setVisible(true);
			label_doctor.setVisible(true);

		} else {
			isHidden = true;

			field_address.setVisible(false);
			field_mobile.setVisible(false);
			field_email.setVisible(false);
			field_emergency.setVisible(false);
			field_doctor.setVisible(false);
			label_address.setVisible(false);
			label_mobile.setVisible(false);
			label_email.setVisible(false);
			label_emergency.setVisible(false);
			label_doctor.setVisible(false);
		}
	}

	//Set for all client information fields the ReadOnly state
	private void setClientDataToReadOnly() {
		field_lastname.setReadOnly(true);
		field_firstname.setReadOnly(true);
		field_birthdate.setReadOnly(true);
		field_address.setReadOnly(true);
		field_mobile.setReadOnly(true);
		field_mobile.setReadOnly(true);
		field_email.setReadOnly(true);
		field_emergency.setReadOnly(true);
		field_doctor.setReadOnly(true);
	}

	private void loadClientData(Client c) {
		field_lastname.setValue(c.getLastName());
		field_firstname.setValue(c.getFirstName());
		field_birthdate.setValue(c.getBirthday().getTime());
		field_address.setValue(c.getAddress().toString());
		field_mobile.setValue(c.getMobileNr());
		field_email.setValue(c.getEmail());
		field_emergency.setValue("Philip J. Fry");
		// field_emergency.setValue(c.getEmergencyContact().toString());
		field_doctor.setValue("Doktor Zoidberg");
		// field_doctor.setValue(c.getDoc().toString());

		setClientDataToReadOnly();
		// FileResource res = new FileResource(new File(c.getPictureUri()));

	}

}
